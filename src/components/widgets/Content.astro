---
import type { Content as Props } from '~/types';
import Headline from '~/components/ui/Headline.astro';
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import ItemGrid from '~/components/ui/ItemGrid.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  callToAction,
  items = [],
  columns,
  image = await Astro.slots.render('image'),
  isReversed = false,

  id,
  isDark = false,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="content-section relative not-prose min-h-screen flex items-center justify-center" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none -z-[1]" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : <div class="bg-gray-50 dark:bg-slate-900"></div>}
    </slot>
  </div>
  <div
    class:list={[
      'relative mx-auto max-w-7xl px-4 md:px-6 py-12 md:py-16 lg:py-20 text-default intersect-once intersect-quarter intercept-no-queue motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade w-full',
      { dark: isDark },
    ]}
  >
    <Headline
      title={title}
      subtitle={subtitle}
      tagline={tagline}
      classes={{
        container: 'max-w-xl sm:mx-auto lg:max-w-2xl fade-in-element fade-in-delay-1',
        title: 'text-4xl md:text-5xl font-bold tracking-tighter mb-4 font-heading text-reveal fade-in-delay-2',
        subtitle: 'max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400 fade-in-element fade-in-delay-3',
      }}
    />
    <div class="mx-auto max-w-7xl p-4 md:px-8">
      <div class={`md:flex ${isReversed ? 'md:flex-row-reverse' : ''} md:gap-16`}>
        <div class="md:basis-1/2 self-center slide-in-left fade-in-delay-4">
          {content && <div class="mb-12 text-lg dark:text-slate-400 fade-in-element" set:html={content} />}

          {
            callToAction && (
              <div class="mt-[-40px] mb-8 text-primary fade-in-element fade-in-delay-5">
                <Button variant="link" {...callToAction} />
              </div>
            )
          }

          <ItemGrid
            items={items}
            columns={columns}
            defaultIcon="tabler:check"
            classes={{
              container: `gap-y-4 md:gap-y-8`,
              panel: 'max-w-none fade-in-element',
              title: 'text-lg font-medium leading-6 dark:text-white ml-2 rtl:ml-0 rtl:mr-2',
              description: 'text-muted dark:text-slate-400 ml-2 rtl:ml-0 rtl:mr-2',
              icon: 'flex h-7 w-7 items-center justify-center rounded-full bg-green-600 dark:bg-green-700 text-gray-50 p-1',
              action: 'text-lg font-medium leading-6 dark:text-white ml-2 rtl:ml-0 rtl:mr-2',
            }}
          />
        </div>
        <div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2 slide-in-right fade-in-delay-4">
          {
            image && (
              <div class="relative m-auto max-w-4xl zoom-in">
                {typeof image === 'string' ? (
                  <Fragment set:html={image} />
                ) : (
                  <Image
                    class="mx-auto w-full rounded-lg bg-gray-500 shadow-lg"
                    width={500}
                    height={500}
                    widths={[400, 768]}
                    sizes="(max-width: 768px) 100vw, 432px"
                    layout="responsive"
                    {...image}
                  />
                )}
              </div>
            )
          }
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Styles pour la section Content */
  .content-section {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>
