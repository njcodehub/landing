---
// Composant ServiceCards pour la section Services
---

<div class="service-cards-container">
  <!-- Card 1: Embedded C Development & Linux -->
  <div class="service-card">
    <div class="card-header">
      <div class="card-icon">
        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
        </svg>
      </div>
      <h3 class="card-title">Embedded C Development & Linux</h3>
    </div>
    <div class="card-content">
      <p class="card-description">
        Development of embedded software in C for microcontrollers, DSPs and embedded Linux systems.
      </p>
      <div class="card-features">
        <div class="feature-item">
          <span class="feature-icon">‚ö°</span>
          <span>Real-time systems & RTOS</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">üîß</span>
          <span>Drivers & hardware abstraction</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">üì°</span>
          <span>Protocols (I2C, SPI, UART, CAN)</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">üåê</span>
          <span>Embedded Linux & Yocto</span>
        </div>
      </div>
    </div>
    <div class="card-glow"></div>
  </div>

  <!-- Card 2: Test Automation & Embedded DevOps -->
  <div class="service-card">
    <div class="card-header">
      <div class="card-icon">
        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"></path>
        </svg>
      </div>
      <h3 class="card-title">Test Automation & Embedded DevOps</h3>
    </div>
    <div class="card-content">
      <p class="card-description">
        Setting up CI/CD pipelines and test automation for embedded systems.
      </p>
      <div class="card-features">
        <div class="feature-item">
          <span class="feature-icon">üîÑ</span>
          <span>CI/CD for embedded</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">üß™</span>
          <span>Automated testing</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">üìä</span>
          <span>Monitoring & metrics</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">üöÄ</span>
          <span>Continuous deployment</span>
        </div>
      </div>
    </div>
    <div class="card-glow"></div>
  </div>
</div>

<style>
  .service-cards-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 0;
  }

  .service-card {
    position: relative;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 2px solid rgba(0, 173, 181, 0.3);
    border-radius: 20px;
    padding: 2rem;
    transition: all 0.3s ease;
    overflow: hidden;
    min-height: 400px;
    display: flex;
    flex-direction: column;
    cursor: pointer;
  }

  .service-card:hover {
    transform: translateY(-10px);
    border-color: #00adb5;
    box-shadow: 0 20px 40px rgba(0, 173, 181, 0.3);
  }

  .card-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .card-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #00adb5, #009aa1);
    border-radius: 15px;
    color: white;
    box-shadow: 0 0 20px rgba(0, 173, 181, 0.5);
  }

  .card-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #222831;
    margin: 0;
    line-height: 1.3;
  }

  .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .card-description {
    color: #393e46;
    font-size: 1rem;
    line-height: 1.6;
    margin-bottom: 1.5rem;
    flex: 1;
  }

  .card-features {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: #393e46;
    font-size: 0.95rem;
  }

  .feature-icon {
    font-size: 1.2rem;
    width: 24px;
    text-align: center;
  }

  .card-glow {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent, rgba(0, 173, 181, 0.1), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    border-radius: 20px;
  }

  .service-card:hover .card-glow {
    opacity: 1;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .service-cards-container {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      padding: 1rem 0;
    }

    .service-card {
      padding: 1.5rem;
      min-height: 350px;
    }

    .card-title {
      font-size: 1.25rem;
    }
  }

  /* Animation d'entr√©e */
  .service-card {
    opacity: 0;
    transform: translateY(30px);
    animation: cardFadeIn 0.6s ease forwards;
  }

  .service-card:nth-child(1) {
    animation-delay: 0.1s;
  }

  .service-card:nth-child(2) {
    animation-delay: 0.2s;
  }

  @keyframes cardFadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 